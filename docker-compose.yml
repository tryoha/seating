services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn project.wsgi -b 0.0.0.0:8000 
    restart: always
    # env_file:
    #   - ./.env
    volumes:
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
    expose:
      - 8000
    # depends_on:
    #   - db
    #   - redis
    #   - celery

  # db:
  #   image: postgres:15
  #   restart: always
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
      # - ./certbot/conf:/etc/letsencrypt
      # - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      # - 443:443
    depends_on:
      - web

  # celery:
  #   build: .
  #   command: celery -A project worker -l info
  #   restart: always
  #   volumes:
  #     - .:/code
  #   environment:
  #     - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
  #     - CELERY_BROKER=redis://redis:6379/0
  #     - CELERY_BACKEND=redis://redis:6379/0
  #   depends_on:
  #     - redis

  # redis:
  #   restart: always
  #   image: redis:latest
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/var/lib/redis

volumes:
  # postgres_data:
  # redis_data:
  static:
  media:
